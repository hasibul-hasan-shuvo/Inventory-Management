// File generated by FlutterFire CLI.
// ignore_for_file: lines_longer_than_80_chars, avoid_classes_with_only_static_members
import 'package:dental_inventory/flavors/environment.dart';
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;
import 'package:flutter_dotenv/flutter_dotenv.dart';

class DefaultFirebaseOptions {
  static FirebaseOptions currentPlatform(Environment env) {
    if (kIsWeb) {
      throw UnsupportedError(
        'DefaultFirebaseOptions have not been configured for web - '
        'you can reconfigure this by running the FlutterFire CLI again.',
      );
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        if (env == Environment.JACOBSEN_PRODUCTION) {
          return androidJacobsenProd;
        }
        return androidJacobsenDev;
      case TargetPlatform.iOS:
        if (env == Environment.JACOBSEN_PRODUCTION) {
          return iosJacobsenProd;
        }
        return iosJacobsenDev;
      case TargetPlatform.macOS:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for macos - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.windows:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for windows - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static FirebaseOptions androidJacobsenDev = FirebaseOptions(
    apiKey: dotenv.env['JACOBSEN_DEV_FIREBASE_ANDROID_API_KEY']!,
    appId: dotenv.env['JACOBSEN_DEV_FIREBASE_ANDROID_APP_ID']!,
    messagingSenderId:
        dotenv.env['JACOBSEN_DEV_FIREBASE_ANDROID_MESSAGING_SENDER_ID']!,
    projectId: dotenv.env['JACOBSEN_DEV_FIREBASE_ANDROID_PROJECT_ID']!,
    storageBucket: dotenv.env['JACOBSEN_DEV_FIREBASE_ANDROID_STORAGE_BUCKET']!,
    databaseURL: dotenv.env['JACOBSEN_DEV_FIREBASE_ANDROID_DATABASE_URL']!,
  );

  static FirebaseOptions androidJacobsenProd = FirebaseOptions(
    apiKey: dotenv.env['JACOBSEN_PROD_FIREBASE_ANDROID_API_KEY']!,
    appId: dotenv.env['JACOBSEN_PROD_FIREBASE_ANDROID_APP_ID']!,
    messagingSenderId:
        dotenv.env['JACOBSEN_PROD_FIREBASE_ANDROID_MESSAGING_SENDER_ID']!,
    projectId: dotenv.env['JACOBSEN_PROD_FIREBASE_ANDROID_PROJECT_ID']!,
    storageBucket: dotenv.env['JACOBSEN_PROD_FIREBASE_ANDROID_STORAGE_BUCKET']!,
    databaseURL: dotenv.env['JACOBSEN_PROD_FIREBASE_ANDROID_DATABASE_URL']!,
  );

  static FirebaseOptions iosJacobsenDev = FirebaseOptions(
    apiKey: dotenv.env['JACOBSEN_DEV_FIREBASE_IOS_API_KEY']!,
    appId: dotenv.env['JACOBSEN_DEV_FIREBASE_IOS_APP_ID']!,
    messagingSenderId:
        dotenv.env['JACOBSEN_DEV_FIREBASE_IOS_MESSAGING_SENDER_ID']!,
    projectId: dotenv.env['JACOBSEN_DEV_FIREBASE_IOS_PROJECT_ID']!,
    storageBucket: dotenv.env['JACOBSEN_DEV_FIREBASE_IOS_STORAGE_BUCKET']!,
    androidClientId: dotenv.env['JACOBSEN_DEV_FIREBASE_ANDROID_CLIENT_ID']!,
    iosClientId: dotenv.env['JACOBSEN_DEV_FIREBASE_IOS_CLIENT_ID']!,
    iosBundleId: dotenv.env['JACOBSEN_DEV_FIREBASE_IOS_BUNDLE_ID']!,
    databaseURL: dotenv.env['JACOBSEN_DEV_FIREBASE_IOS_DATABASE_URL']!,
  );

  static FirebaseOptions iosJacobsenProd = FirebaseOptions(
    apiKey: dotenv.env['JACOBSEN_PROD_FIREBASE_IOS_API_KEY']!,
    appId: dotenv.env['JACOBSEN_PROD_FIREBASE_IOS_APP_ID']!,
    messagingSenderId:
        dotenv.env['JACOBSEN_PROD_FIREBASE_IOS_MESSAGING_SENDER_ID']!,
    projectId: dotenv.env['JACOBSEN_PROD_FIREBASE_IOS_PROJECT_ID']!,
    storageBucket: dotenv.env['JACOBSEN_PROD_FIREBASE_IOS_STORAGE_BUCKET']!,
    androidClientId: dotenv.env['JACOBSEN_PROD_FIREBASE_ANDROID_CLIENT_ID']!,
    iosClientId: dotenv.env['JACOBSEN_PROD_FIREBASE_IOS_CLIENT_ID']!,
    iosBundleId: dotenv.env['JACOBSEN_PROD_FIREBASE_IOS_BUNDLE_ID']!,
    databaseURL: dotenv.env['JACOBSEN_PROD_FIREBASE_IOS_DATABASE_URL']!,
  );
}
